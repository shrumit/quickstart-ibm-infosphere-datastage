AWSTemplateFormatVersion: '2010-09-09'
Description:  Deploys IBM InfoSphere DataStage as a Red Hat OpenShift cluster in an existing VPC. This template creates EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1pjbembrj)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: VPC configuration
      Parameters:
        - ClusterAvailability
        - PublicSubnet1ID
        - PublicSubnet2ID
        - PublicSubnet3ID
        - PrivateSubnet1ID
        - PrivateSubnet2ID
        - PrivateSubnet3ID
        - VPCID
        - VPCCIDR
        - RemoteAccessCIDR
        - ContainerAccessCIDR
    - Label:
        default: Cluster configuration
      Parameters:
        - KeyPairName
        - DSClientInstanceType
        - NodesInstanceType
        - MasterInstanceType
        - EtcdInstanceType
        - ResourceTag
        - IISPassword
        - OpenShiftAdminPassword
    - Label:
        default: GlusterFS configuration
      Parameters:
        - GlusterInstanceType
        - GlusterStorageType
        - GlusterStorageSize
        - GlusterStorageIops
    - Label:
        default: Red Hat subscription information
      Parameters:
        - RedhatSubscriptionUserName
        - RedhatSubscriptionPassword
        - RedhatSubscriptionPoolID
    - Label:
        default: DataStage license information
      Parameters:
        - LicenseAgreement
        - IBMDataStageICN
        - IBMDataStagePartNumber
        - IBMDataStageClientICN
        - IBMDataStageClientPartNumber
    - Label:
        default: AWS Quick Start configuration
      Parameters:
        - QSS3BucketName
        - QSS3KeyPrefix
        - OutputBucketName
    ParameterLabels:
      ContainerAccessCIDR:
        default: Container access CIDR
      ClusterAvailability:
        default: Cluster availability
      DSClientInstanceType:
        default: InfoSphere DataStage Windows Client instance type
      EtcdInstanceType:
        default: Etcd instance type
      GlusterInstanceType:
        default: Gluster instance type
      GlusterStorageIops:
        default: Gluster storage IOPS
      GlusterStorageSize:
        default: Gluster storage size
      GlusterStorageType:
        default: Gluster EBS volume type
      IBMDataStageClientICN:
        default: IBM Customer Number for InfoSphere DataStage and QualityStage client
      IBMDataStageClientPartNumber:
        default: InfoSphere DataStage and QualityStage client part number
      IBMDataStageICN:
        default: IBM Customer Number for InfoSphere DataStage
      IBMDataStagePartNumber:
        default: InfoSphere DataStage part number
      IISPassword:
        default: IIS password
      KeyPairName:
        default: Key pair name
      LicenseAgreement:
        default: License agreement
      MasterInstanceType:
        default: Master instance type
      NodesInstanceType:
        default: Worker nodes instance type
      OpenShiftAdminPassword:
        default: OpenShift admin password
      OutputBucketName:
        default: Output S3 bucket name
      PrivateSubnet1ID:
        default: Private subnet 1 ID
      PrivateSubnet2ID:
        default: Private subnet 2 ID
      PrivateSubnet3ID:
        default: Private subnet 3 ID
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      PublicSubnet3ID:
        default: Public subnet 3 ID
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      RedhatSubscriptionPassword:
        default: Red Hat subscription password
      RedhatSubscriptionPoolID:
        default: Red Hat pool ID
      RedhatSubscriptionUserName:
        default: Red Hat subscription user name
      RemoteAccessCIDR:
        default: Remote access CIDR
      ResourceTag:
        default: Resource tag
      VPCCIDR:
        default: VPC CIDR
      VPCID:
        default: VPC ID
Parameters:
  ClusterAvailability:
    AllowedValues:
      - 'HA'
      - 'Non-HA'
    Default: 'Non-HA'
    Description: 'HA deploys a cluster spanning three Availability Zones, provisioning three instances each of Master and Etcd. Non-HA deploys a cluster spanning one Availability Zone, creating one instance each of Master and Etcd. GlusterFS is deployed with three instances/EBS volumes in both cases.
                  Note: Non-HA should NOT be used for business-critical cluster deployments.'
    Type: String
  ContainerAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the Windows client instance and InfoSphere Launchpad from a web browser. We recommend
      that you set this value to a trusted IP range. For example, you might want to grant only your corporate network access to the software.
    Type: String
  DSClientInstanceType:
    AllowedValues:
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
    ConstraintDescription: Must contain valid instance type
    Default: t3.xlarge
    Description: Type of EC2 instance for the DataStage Windows Client instance
    Type: String
  EtcdInstanceType:
    Default: m5.xlarge
    AllowedValues:
      - t3.xlarge
      - t3.2xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - t2.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
    ConstraintDescription: Must contain valid instance type
    Description: Type of EC2 instance for the Etcd nodes
    Type: String
  GlusterInstanceType:
    Default: i3.large
    AllowedValues:
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
    ConstraintDescription: Must contain valid instance type
    Description: Type of EC2 instance for the Node instances
    Type: String
  GlusterStorageIops:
    Default: 4500
    Description: EBS volume IOPS to allocate (only applicable if io1 has been selected for GlusterStorageType)
    Type: Number
  GlusterStorageSize:
    Description: Size in GB of the available storage (will create 3x ebs volumes of this size)
    Type: Number
    Default: 1500
  GlusterStorageType:
    Default: gp2
    Description: EBS volume type to use for storage
    Type: String
    AllowedValues:
      - io1
      - gp2
      - st1
  IBMDataStageClientICN:
    AllowedPattern: '[0-9]+'
    Description: The IBM Customer Number (ICN) listed in your Proof of Entitlement for InfoSphere DataStage and QualityStage client.
    NoEcho: true
    Type: String
  IBMDataStageClientPartNumber:
    AllowedPattern: '[a-zA-Z0-9]+'
    Description: The IBM part number associated with your InfoSphere DataStage and QualityStage client license.
    Type: String
  IBMDataStageICN:
    AllowedPattern: '[0-9]+'
    Description: The IBM Customer Number (ICN) listed in your Proof of Entitlement for InfoSphere DataStage.
    NoEcho: true
    Type: String
  IBMDataStagePartNumber:
    AllowedPattern: '[a-zA-Z0-9]+'
    Description: The IBM part number associated with your InfoSphere DataStage license.
    Type: String
  IISPassword:
    Description: 'Password to be set on the DataStage application for the user name "isadmin".'
    Type: String
    MinLength: 8
    MaxLength: 20
    NoEcho: true
    AllowedPattern: '(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[\p{Punct}])([0-9a-zA-Z\p{Punct}]+)'
    ConstraintDescription: Must be 8-20 characters, containing at least one number, one special character, one lowercase and one uppercase character.
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you to securely connect to your instance after it launches
    Type: AWS::EC2::KeyPair::KeyName
  LicenseAgreement:
    Description: Choose Accept to acknowledge that you have read and agree to the license terms for IBM InfoSphere DataStage v11.7.1 (http://ibm.biz/isds1171) and IBM InfoSphere DataStage and Quality Stage Designer v11.7.1 (http://ibm.biz/isdsc1171).
    Type: String
    Default: '-'
    AllowedValues:
      - I agree
      - '-'
  MasterInstanceType:
    Default: m5.xlarge
    AllowedValues:
      - t3.xlarge
      - t3.2xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - t2.xlarge
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
    ConstraintDescription: Must contain valid instance type
    Description: Type of EC2 instance for the Master nodes
    Type: String
  NodesInstanceType:
    Default: m5.xlarge
    AllowedValues:
      - t3.xlarge
      - t3.2xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - t2.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
    ConstraintDescription: Must contain valid instance type
    Description: Type of EC2 instance for the worker instances
    Type: String
  OpenShiftAdminPassword:
    Description: Password for OpenShift Admin UI Must be at least 8 characters containing
      letters and (minimum 1 capital letter), numbers and symbols
    Type: String
    MinLength: '8'
    AllowedPattern: ^[^ \\']+$
    NoEcho: 'true'
  OutputBucketName:
    Description: '[Optional] The bucket  name where the zip file output should be placed. If left blank, a bucket name is automatically generated.'
    Type: String
    Default: ''
  PrivateSubnet1ID:
    Description: The ID of the private subnet in Availability Zone 1.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2ID:
    Description: The ID of the private subnet in Availability Zone 2. When deploying a non-HA cluster some arbitrary subnet must be selected; the selection will be ignored.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet3ID:
    Description: The ID of the private subnet in Availability Zone 3. When deploying a non-HA cluster some arbitrary subnet must be selected; the selection will be ignored.
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1ID:
    Description: The ID of the public subnet in Availability Zone 1.
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2ID:
    Description: The ID of the public subnet in Availability Zone 2. When deploying a non-HA cluster some arbitrary subnet must be selected; the selection will be ignored.
    Type: AWS::EC2::Subnet::Id
  PublicSubnet3ID:
    Description: The ID of the public subnet in Availability Zone 3. When deploying a non-HA cluster some arbitrary subnet must be selected; the selection will be ignored.
    Type: AWS::EC2::Subnet::Id
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-ibm-infosphere-datastage/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).
    Type: String
  RedhatSubscriptionUserName:
    Description: Enter your Red Hat Network (RHN) user name.
    Type: String
  RedhatSubscriptionPassword:
    NoEcho: 'true'
    Description: Enter your Red Hat Network (RHN) password.
    Type: String
    AllowedPattern: ^[^ \\']+$
  RedhatSubscriptionPoolID:
    Description: Enter your Red Hat Network (RHN) pool ID.
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the OpenShift master nodes and OCP UI. We recommend
      that you set this value to a trusted IP range. For example, you might want to grant only your corporate network
      access to the software.
    Type: String
  ResourceTag:
    AllowedPattern: '[a-z0-9]+'
    ConstraintDescription: Non-empty. Must be lowercase letters and numbers only.
    Default: ds1
    Description: This will be used to label AWS resources and the DataStage project in OpenShift. Ensure that every InfoSphere DataStage deployment on your AWS account
      uses a unique resource tag.
    MaxLength: "63" # exceeds a tag limit if longer
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  VPCID:
    Description: The ID of your existing VPC for deployment.
    Type: AWS::EC2::VPC::Id
Rules:
  LicenseAgreementRule:
    Assertions:
      - Assert: !Contains
          - - I agree
          - !Ref 'LicenseAgreement'
        AssertDescription: User must agree to the terms of the license agreement
Conditions:
  IsHA: !Equals [!Ref ClusterAvailability, HA]
Resources:
  DataStageClientStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/ibm-datastage-client.template.yaml'
      Parameters:
        DSClientInstanceType: !Ref DSClientInstanceType
        IBMDataStageClientICN: !Ref IBMDataStageClientICN
        IBMDataStageClientPartNumber: !Ref IBMDataStageClientPartNumber
        KeyPairName: !Ref KeyPairName
        LicenseAgreement: !Ref LicenseAgreement
        PublicSubnet1ID: !Ref PublicSubnet1ID
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        ResourceTag: !Ref ResourceTag
        VPCCIDR: !Ref VPCCIDR
        VPCID: !Ref VPCID
  # This function obtains permission for the IBM private registry and returns the registry prefix
  EcrAccess:
    Type: Custom::EcrAccess
    Properties:
      ServiceToken: !GetAtt 'EcrAccessFunction.Arn'
      ICN: !Ref 'IBMDataStageICN'
      PartNumber: !Ref 'IBMDataStagePartNumber'
      Region: !Ref 'AWS::Region'
      AccountId: !Ref 'AWS::AccountId'
  EcrAccessFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import botocore.vendored.requests as requests
          import cfnresponse
          import json
          ENDPOINT='https://fnnuabv2h0.execute-api.ca-central-1.amazonaws.com/default/ecr_permissioning'
          def handler(event, context):
              responseData = {}
              try:
                  print(event['RequestType'], 'request received.')
                  if (event['RequestType'] == 'Delete' or event['RequestType'] == 'Update'):
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)
                      return
                  data = {
                      'icn': event['ResourceProperties']['ICN'],
                      'part_number': event['ResourceProperties']['PartNumber'],
                      'region': event['ResourceProperties']['Region'],
                      'account_id': event['ResourceProperties']['AccountId']
                  }
                  r = requests.post(ENDPOINT, json=data)
                  if r.status_code != 200:
                      print('**FAILURE_REASON: Validation API returned non-200 response code. Please ensure that ICN and Part Number are correct')
                      cfnresponse.send(event, context, cfnresponse.FAILED, responseData)
                      return
                  response = r.json()
                  responseData['Prefix']=response['prefix']
              except Exception as err:
                  print('**FAILURE_REASON:', type(err).__name__, str(err))
                  cfnresponse.send(event, context, cfnresponse.FAILED, responseData)
              else:
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)
      Handler: index.handler
      Role: !GetAtt 'LambdaExecutionRole.Arn'
      Runtime: python3.7
      Timeout: 60
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  OpenShiftStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-redhat-openshift/templates/openshift.template'
      Parameters:
        EtcdInstanceType: !Ref EtcdInstanceType
        MasterInstanceType: !Ref MasterInstanceType
        NodesInstanceType: !Ref NodesInstanceType
        NumberOfAZs: !If [IsHA, '3', '1']
        NumberOfMaster: !If [IsHA, '3', '1']
        NumberOfEtcd: !If [IsHA, '3', '1']
        NumberOfNodes: '2'
        OutputBucketName: !Ref OutputBucketName
        KeyPairName: !Ref KeyPairName
        PrivateSubnet1ID: !Ref PrivateSubnet1ID
        PrivateSubnet2ID: !If [IsHA, !Ref PrivateSubnet2ID, !Ref PrivateSubnet1ID]
        PrivateSubnet3ID: !If [IsHA, !Ref PrivateSubnet3ID, !Ref PrivateSubnet1ID]
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !If [IsHA, !Ref PublicSubnet2ID, !Ref PrivateSubnet1ID]
        PublicSubnet3ID: !If [IsHA, !Ref PublicSubnet3ID, !Ref PrivateSubnet1ID]
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-redhat-openshift/'
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        ContainerAccessCIDR: !Ref ContainerAccessCIDR
        VPCID: !Ref VPCID
        VPCCIDR: !Ref VPCCIDR
        AnsibleStorageSize: '200'
        ClusterName: !Ref ResourceTag
        OpenShiftAdminPassword: !Ref OpenShiftAdminPassword
        RedhatSubscriptionUserName: !Ref RedhatSubscriptionUserName
        RedhatSubscriptionPassword: !Ref RedhatSubscriptionPassword
        RedhatSubscriptionPoolID: !Ref RedhatSubscriptionPoolID
        OpenshiftContainerPlatformVersion: '3.11'
        GlusterFS: 'Enabled'
        GlusterStorageEncrypted: True
        GlusterInstanceType: !Ref GlusterInstanceType
        GlusterStorageIops: !Ref GlusterStorageIops
        GlusterStorageSize: !Ref GlusterStorageSize
        GlusterStorageType: !Ref GlusterStorageType
        AnsibleFromGit: 'True'
        AnsiblePostInstallScript: !Sub 's3://${QSS3BucketName}/${QSS3KeyPrefix}scripts/post-install.sh'
        AnsibleAdditionalEnvironmentVariables: !Join
          - ','
          - - !Sub 'ds_RegistryPrefix=${EcrAccess.Prefix}'
            - !Sub 'ds_IISPassword=${IISPassword}'
            - !Sub 'ds_DSClientPrivateIp=${DataStageClientStack.Outputs.DataStageClientPrivateIp}'
            - !Sub 'ds_ProjectName=${ResourceTag}'
            - !Sub 'ds_QS_S3URI=s3://${QSS3BucketName}/${QSS3KeyPrefix}'
            - !Sub 'ds_ICN=${IBMDataStageICN}'
            - !Sub 'ds_StorageSize=${GlusterStorageSize}'

  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneConfig:
        Comment: Hosted zone for DataStage thick client
      Name: en-cond
      VPCs:
        - VPCId: !Ref VPCID
          VPCRegion: !Ref 'AWS::Region'
  ProxyRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZone
      Comment: DataStage-friendly DNS name for load balancer.
      Name: is-en-conductor-0.en-cond
      Type: A
      AliasTarget:
        DNSName: !GetAtt OpenShiftStack.Outputs.ContainerAccessELBName
        HostedZoneId: !GetAtt OpenShiftStack.Outputs.ContainerAccessELBHostedZoneNameID
  DataStageIngressExternal1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: !Ref ContainerAccessCIDR
      FromPort: 31531
      ToPort: 31531
      GroupId: !GetAtt OpenShiftStack.Outputs.OpenShiftNodeSecurityGroup
      IpProtocol: tcp
  DataStageIngressExternal2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: !Ref ContainerAccessCIDR
      FromPort: 31538
      ToPort: 31538
      GroupId: !GetAtt OpenShiftStack.Outputs.OpenShiftNodeSecurityGroup
      IpProtocol: tcp
  DataStageIngressClient1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: !Sub '${DataStageClientStack.Outputs.DataStageClientPublicIp}/32'
      FromPort: 31531
      ToPort: 31531
      GroupId: !GetAtt OpenShiftStack.Outputs.OpenShiftNodeSecurityGroup
      IpProtocol: tcp
  DataStageIngressClient2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: !Sub '${DataStageClientStack.Outputs.DataStageClientPublicIp}/32'
      FromPort: 31538
      ToPort: 31538
      GroupId: !GetAtt OpenShiftStack.Outputs.OpenShiftNodeSecurityGroup
      IpProtocol: tcp
  DataStageIngressClient3:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: !Sub '${DataStageClientStack.Outputs.DataStageClientPublicIp}/32'
      FromPort: 443
      ToPort: 443
      GroupId: !GetAtt OpenShiftStack.Outputs.OpenShiftNodeSecurityGroup
      IpProtocol: tcp
  DataStageIngressClient4:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: !Sub '${DataStageClientStack.Outputs.DataStageClientPublicIp}/32'
      FromPort: 80
      ToPort: 80
      GroupId: !GetAtt OpenShiftStack.Outputs.OpenShiftNodeSecurityGroup
      IpProtocol: tcp
Outputs:
  InfoSphereDataStageLaunchpad:
    Description: Use this ELB to expose ports to the internet
    Value: !Sub 'https://${OpenShiftStack.Outputs.ContainerAccessELBName}/ibm/iis/launchpad/'
  ContainerELBName:
    Description: Replace this in the DataStage Windows Client instance's README
    Value: !GetAtt OpenShiftStack.Outputs.ContainerAccessELBName
  OpenShiftUI:
    Description: The URL OpenShiftUI
    Value: !GetAtt 'OpenShiftStack.Outputs.OpenShiftUI'
  DataStageClientPublicDnsName:
    Value: !GetAtt DataStageClientStack.Outputs.DataStageClientPublicDnsName
